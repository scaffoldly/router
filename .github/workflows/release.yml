name: Release

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - .devcontainer/**
      - .github/workflows/tests.yaml
      - test/**

permissions: write-all

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['22']
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
      - run: yarn
      - run: yarn build
      - if: ${{ matrix.node == '22' }}
        uses: scaffoldly/bump-version-action@v1
        with:
          action: prerelease
          version-file: package.json
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - run: echo "VERSION=$(jq -r '.version' package.json)" >> "$GITHUB_ENV"
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=semver,pattern={{version}},value=${{ env.VERSION }},enable=${{ github.event_name != 'pull_request' }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.VERSION }},enable=${{ github.event_name != 'pull_request' }}
            type=semver,pattern={{major}},value=${{ env.VERSION }},enable=${{ github.event_name != 'pull_request' }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      - uses: docker/build-push-action@v6
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          push: true
